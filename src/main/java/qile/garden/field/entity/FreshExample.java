package qile.garden.field.entity;

import java.util.ArrayList;
import java.util.List;

public class FreshExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fresh
     *
     * @mbg.generated Wed Jun 06 21:32:14 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fresh
     *
     * @mbg.generated Wed Jun 06 21:32:14 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fresh
     *
     * @mbg.generated Wed Jun 06 21:32:14 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fresh
     *
     * @mbg.generated Wed Jun 06 21:32:14 CST 2018
     */
    public FreshExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fresh
     *
     * @mbg.generated Wed Jun 06 21:32:14 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fresh
     *
     * @mbg.generated Wed Jun 06 21:32:14 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fresh
     *
     * @mbg.generated Wed Jun 06 21:32:14 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fresh
     *
     * @mbg.generated Wed Jun 06 21:32:14 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fresh
     *
     * @mbg.generated Wed Jun 06 21:32:14 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fresh
     *
     * @mbg.generated Wed Jun 06 21:32:14 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fresh
     *
     * @mbg.generated Wed Jun 06 21:32:14 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fresh
     *
     * @mbg.generated Wed Jun 06 21:32:14 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fresh
     *
     * @mbg.generated Wed Jun 06 21:32:14 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fresh
     *
     * @mbg.generated Wed Jun 06 21:32:14 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fresh
     *
     * @mbg.generated Wed Jun 06 21:32:14 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andOriginIsNull() {
            addCriterion("origin is null");
            return (Criteria) this;
        }

        public Criteria andOriginIsNotNull() {
            addCriterion("origin is not null");
            return (Criteria) this;
        }

        public Criteria andOriginEqualTo(String value) {
            addCriterion("origin =", value, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginNotEqualTo(String value) {
            addCriterion("origin <>", value, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginGreaterThan(String value) {
            addCriterion("origin >", value, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginGreaterThanOrEqualTo(String value) {
            addCriterion("origin >=", value, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginLessThan(String value) {
            addCriterion("origin <", value, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginLessThanOrEqualTo(String value) {
            addCriterion("origin <=", value, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginLike(String value) {
            addCriterion("origin like", value, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginNotLike(String value) {
            addCriterion("origin not like", value, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginIn(List<String> values) {
            addCriterion("origin in", values, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginNotIn(List<String> values) {
            addCriterion("origin not in", values, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginBetween(String value1, String value2) {
            addCriterion("origin between", value1, value2, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginNotBetween(String value1, String value2) {
            addCriterion("origin not between", value1, value2, "origin");
            return (Criteria) this;
        }

        public Criteria andUnitlengthIsNull() {
            addCriterion("unitLength is null");
            return (Criteria) this;
        }

        public Criteria andUnitlengthIsNotNull() {
            addCriterion("unitLength is not null");
            return (Criteria) this;
        }

        public Criteria andUnitlengthEqualTo(Double value) {
            addCriterion("unitLength =", value, "unitlength");
            return (Criteria) this;
        }

        public Criteria andUnitlengthNotEqualTo(Double value) {
            addCriterion("unitLength <>", value, "unitlength");
            return (Criteria) this;
        }

        public Criteria andUnitlengthGreaterThan(Double value) {
            addCriterion("unitLength >", value, "unitlength");
            return (Criteria) this;
        }

        public Criteria andUnitlengthGreaterThanOrEqualTo(Double value) {
            addCriterion("unitLength >=", value, "unitlength");
            return (Criteria) this;
        }

        public Criteria andUnitlengthLessThan(Double value) {
            addCriterion("unitLength <", value, "unitlength");
            return (Criteria) this;
        }

        public Criteria andUnitlengthLessThanOrEqualTo(Double value) {
            addCriterion("unitLength <=", value, "unitlength");
            return (Criteria) this;
        }

        public Criteria andUnitlengthIn(List<Double> values) {
            addCriterion("unitLength in", values, "unitlength");
            return (Criteria) this;
        }

        public Criteria andUnitlengthNotIn(List<Double> values) {
            addCriterion("unitLength not in", values, "unitlength");
            return (Criteria) this;
        }

        public Criteria andUnitlengthBetween(Double value1, Double value2) {
            addCriterion("unitLength between", value1, value2, "unitlength");
            return (Criteria) this;
        }

        public Criteria andUnitlengthNotBetween(Double value1, Double value2) {
            addCriterion("unitLength not between", value1, value2, "unitlength");
            return (Criteria) this;
        }

        public Criteria andUnitwidthIsNull() {
            addCriterion("unitWidth is null");
            return (Criteria) this;
        }

        public Criteria andUnitwidthIsNotNull() {
            addCriterion("unitWidth is not null");
            return (Criteria) this;
        }

        public Criteria andUnitwidthEqualTo(Double value) {
            addCriterion("unitWidth =", value, "unitwidth");
            return (Criteria) this;
        }

        public Criteria andUnitwidthNotEqualTo(Double value) {
            addCriterion("unitWidth <>", value, "unitwidth");
            return (Criteria) this;
        }

        public Criteria andUnitwidthGreaterThan(Double value) {
            addCriterion("unitWidth >", value, "unitwidth");
            return (Criteria) this;
        }

        public Criteria andUnitwidthGreaterThanOrEqualTo(Double value) {
            addCriterion("unitWidth >=", value, "unitwidth");
            return (Criteria) this;
        }

        public Criteria andUnitwidthLessThan(Double value) {
            addCriterion("unitWidth <", value, "unitwidth");
            return (Criteria) this;
        }

        public Criteria andUnitwidthLessThanOrEqualTo(Double value) {
            addCriterion("unitWidth <=", value, "unitwidth");
            return (Criteria) this;
        }

        public Criteria andUnitwidthIn(List<Double> values) {
            addCriterion("unitWidth in", values, "unitwidth");
            return (Criteria) this;
        }

        public Criteria andUnitwidthNotIn(List<Double> values) {
            addCriterion("unitWidth not in", values, "unitwidth");
            return (Criteria) this;
        }

        public Criteria andUnitwidthBetween(Double value1, Double value2) {
            addCriterion("unitWidth between", value1, value2, "unitwidth");
            return (Criteria) this;
        }

        public Criteria andUnitwidthNotBetween(Double value1, Double value2) {
            addCriterion("unitWidth not between", value1, value2, "unitwidth");
            return (Criteria) this;
        }

        public Criteria andGrowperiodIsNull() {
            addCriterion("growPeriod is null");
            return (Criteria) this;
        }

        public Criteria andGrowperiodIsNotNull() {
            addCriterion("growPeriod is not null");
            return (Criteria) this;
        }

        public Criteria andGrowperiodEqualTo(Integer value) {
            addCriterion("growPeriod =", value, "growperiod");
            return (Criteria) this;
        }

        public Criteria andGrowperiodNotEqualTo(Integer value) {
            addCriterion("growPeriod <>", value, "growperiod");
            return (Criteria) this;
        }

        public Criteria andGrowperiodGreaterThan(Integer value) {
            addCriterion("growPeriod >", value, "growperiod");
            return (Criteria) this;
        }

        public Criteria andGrowperiodGreaterThanOrEqualTo(Integer value) {
            addCriterion("growPeriod >=", value, "growperiod");
            return (Criteria) this;
        }

        public Criteria andGrowperiodLessThan(Integer value) {
            addCriterion("growPeriod <", value, "growperiod");
            return (Criteria) this;
        }

        public Criteria andGrowperiodLessThanOrEqualTo(Integer value) {
            addCriterion("growPeriod <=", value, "growperiod");
            return (Criteria) this;
        }

        public Criteria andGrowperiodIn(List<Integer> values) {
            addCriterion("growPeriod in", values, "growperiod");
            return (Criteria) this;
        }

        public Criteria andGrowperiodNotIn(List<Integer> values) {
            addCriterion("growPeriod not in", values, "growperiod");
            return (Criteria) this;
        }

        public Criteria andGrowperiodBetween(Integer value1, Integer value2) {
            addCriterion("growPeriod between", value1, value2, "growperiod");
            return (Criteria) this;
        }

        public Criteria andGrowperiodNotBetween(Integer value1, Integer value2) {
            addCriterion("growPeriod not between", value1, value2, "growperiod");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("description is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("description is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("description =", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("description <>", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("description >", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("description >=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("description <", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("description <=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("description like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("description not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("description in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("description not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("description between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("description not between", value1, value2, "description");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fresh
     *
     * @mbg.generated do_not_delete_during_merge Wed Jun 06 21:32:14 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fresh
     *
     * @mbg.generated Wed Jun 06 21:32:14 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}