<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="qile.garden.field.mapper.GrowerMapper">
  <resultMap id="BaseResultMap" type="qile.garden.field.entity.Grower">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 06 21:32:14 CST 2018.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="settleType" jdbcType="INTEGER" property="settletype" />
    <result column="taxNo" jdbcType="VARCHAR" property="taxno" />
    <result column="bankName" jdbcType="VARCHAR" property="bankname" />
    <result column="bankAccount" jdbcType="VARCHAR" property="bankaccount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 06 21:32:14 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 06 21:32:14 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 06 21:32:14 CST 2018.
    -->
    id, contact, tel, mail, settleType, taxNo, bankName, bankAccount
  </sql>
  <select id="selectByExample" parameterType="qile.garden.field.entity.GrowerExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 06 21:32:14 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from grower
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 06 21:32:14 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from grower
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 06 21:32:14 CST 2018.
    -->
    delete from grower
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="qile.garden.field.entity.GrowerExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 06 21:32:14 CST 2018.
    -->
    delete from grower
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="qile.garden.field.entity.Grower">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 06 21:32:14 CST 2018.
    -->
    insert into grower (id, contact, tel, 
      mail, settleType, taxNo, 
      bankName, bankAccount)
    values (#{id,jdbcType=INTEGER}, #{contact,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{mail,jdbcType=VARCHAR}, #{settletype,jdbcType=INTEGER}, #{taxno,jdbcType=VARCHAR}, 
      #{bankname,jdbcType=VARCHAR}, #{bankaccount,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="qile.garden.field.entity.Grower">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 06 21:32:14 CST 2018.
    -->
    insert into grower
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="settletype != null">
        settleType,
      </if>
      <if test="taxno != null">
        taxNo,
      </if>
      <if test="bankname != null">
        bankName,
      </if>
      <if test="bankaccount != null">
        bankAccount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="settletype != null">
        #{settletype,jdbcType=INTEGER},
      </if>
      <if test="taxno != null">
        #{taxno,jdbcType=VARCHAR},
      </if>
      <if test="bankname != null">
        #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="bankaccount != null">
        #{bankaccount,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="qile.garden.field.entity.GrowerExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 06 21:32:14 CST 2018.
    -->
    select count(*) from grower
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 06 21:32:14 CST 2018.
    -->
    update grower
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.mail != null">
        mail = #{record.mail,jdbcType=VARCHAR},
      </if>
      <if test="record.settletype != null">
        settleType = #{record.settletype,jdbcType=INTEGER},
      </if>
      <if test="record.taxno != null">
        taxNo = #{record.taxno,jdbcType=VARCHAR},
      </if>
      <if test="record.bankname != null">
        bankName = #{record.bankname,jdbcType=VARCHAR},
      </if>
      <if test="record.bankaccount != null">
        bankAccount = #{record.bankaccount,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 06 21:32:14 CST 2018.
    -->
    update grower
    set id = #{record.id,jdbcType=INTEGER},
      contact = #{record.contact,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      mail = #{record.mail,jdbcType=VARCHAR},
      settleType = #{record.settletype,jdbcType=INTEGER},
      taxNo = #{record.taxno,jdbcType=VARCHAR},
      bankName = #{record.bankname,jdbcType=VARCHAR},
      bankAccount = #{record.bankaccount,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="qile.garden.field.entity.Grower">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 06 21:32:14 CST 2018.
    -->
    update grower
    <set>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="settletype != null">
        settleType = #{settletype,jdbcType=INTEGER},
      </if>
      <if test="taxno != null">
        taxNo = #{taxno,jdbcType=VARCHAR},
      </if>
      <if test="bankname != null">
        bankName = #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="bankaccount != null">
        bankAccount = #{bankaccount,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="qile.garden.field.entity.Grower">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 06 21:32:14 CST 2018.
    -->
    update grower
    set contact = #{contact,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      settleType = #{settletype,jdbcType=INTEGER},
      taxNo = #{taxno,jdbcType=VARCHAR},
      bankName = #{bankname,jdbcType=VARCHAR},
      bankAccount = #{bankaccount,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>